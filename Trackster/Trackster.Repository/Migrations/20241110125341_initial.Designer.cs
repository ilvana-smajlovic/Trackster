// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trackster.Repository;

#nullable disable

namespace Trackster.Repository.Migrations
{
    [DbContext(typeof(TracksterContext))]
    [Migration("20241110125341_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Trackster.Model.CrewRoles", b =>
                {
                    b.Property<int>("crew_role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("crew_role_id"));

                    b.Property<string>("crew_role_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("crew_role_id");

                    b.ToTable("CrewRoles");
                });

            modelBuilder.Entity("Trackster.Model.GenreMedia", b =>
                {
                    b.Property<int>("genremedia_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("genremedia_id"));

                    b.Property<int>("genre_id")
                        .HasColumnType("int");

                    b.Property<int>("media_id")
                        .HasColumnType("int");

                    b.HasKey("genremedia_id");

                    b.HasIndex("genre_id");

                    b.HasIndex("media_id");

                    b.ToTable("GenreMedia");
                });

            modelBuilder.Entity("Trackster.Model.Genres", b =>
                {
                    b.Property<int>("genre_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("genre_id"));

                    b.Property<int?>("UserPreferencespreference_id")
                        .HasColumnType("int");

                    b.Property<string>("genre_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("genre_id");

                    b.HasIndex("UserPreferencespreference_id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Trackster.Model.Languages", b =>
                {
                    b.Property<int>("language_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("language_id"));

                    b.Property<string>("language_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("language_id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Trackster.Model.Media", b =>
                {
                    b.Property<int>("media_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("media_id"));

                    b.Property<string>("backdrop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("language_id")
                        .HasColumnType("int");

                    b.Property<string>("picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("rating")
                        .HasColumnType("real");

                    b.Property<DateTime>("release_date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("state")
                        .HasColumnType("bit");

                    b.Property<string>("state_machine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("streaming_service_id")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("media_id");

                    b.HasIndex("language_id");

                    b.HasIndex("streaming_service_id");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("Trackster.Model.MediaPersonCrewRole", b =>
                {
                    b.Property<int>("mediapersonrole_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("mediapersonrole_id"));

                    b.Property<string>("character_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("crew_role_id")
                        .HasColumnType("int");

                    b.Property<int>("media_id")
                        .HasColumnType("int");

                    b.Property<int>("person_id")
                        .HasColumnType("int");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.HasKey("mediapersonrole_id");

                    b.HasIndex("media_id");

                    b.HasIndex("person_id");

                    b.HasIndex("role_id");

                    b.ToTable("MediaPersonRole");
                });

            modelBuilder.Entity("Trackster.Model.MediaStatistics", b =>
                {
                    b.Property<int>("statistic_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("statistic_id"));

                    b.Property<bool>("completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("last_watched_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("media_id")
                        .HasColumnType("int");

                    b.Property<int>("total_watch_time")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("statistic_id");

                    b.HasIndex("media_id");

                    b.HasIndex("user_id");

                    b.ToTable("MediaStatistics");
                });

            modelBuilder.Entity("Trackster.Model.Movies", b =>
                {
                    b.Property<int>("movie_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("movie_id"));

                    b.Property<int>("media_id")
                        .HasColumnType("int");

                    b.Property<int?>("runtime")
                        .HasColumnType("int");

                    b.HasKey("movie_id");

                    b.HasIndex("media_id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Trackster.Model.Notifications", b =>
                {
                    b.Property<int>("notification_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("notification_id"));

                    b.Property<bool>("isSent")
                        .HasColumnType("bit");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notification_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("scheduled_time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("sent_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("notification_id");

                    b.HasIndex("user_id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Trackster.Model.People", b =>
                {
                    b.Property<int>("person_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("person_id"));

                    b.Property<string>("biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("person_id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Trackster.Model.Reviews", b =>
                {
                    b.Property<int>("review_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("review_id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("isApproved")
                        .HasColumnType("bit");

                    b.Property<int>("media_id")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<string>("review_text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("review_id");

                    b.HasIndex("media_id");

                    b.HasIndex("user_id");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Trackster.Model.Roles", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("role_id"));

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("role_id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Trackster.Model.StreamingServices", b =>
                {
                    b.Property<int>("streaming_service_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("streaming_service_id"));

                    b.Property<string>("service_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("streaming_service_id");

                    b.ToTable("StreamingServices");
                });

            modelBuilder.Entity("Trackster.Model.TVShows", b =>
                {
                    b.Property<int>("tvshow_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tvshow_id"));

                    b.Property<int?>("episode_count")
                        .HasColumnType("int");

                    b.Property<int?>("episode_runtime")
                        .HasColumnType("int");

                    b.Property<int>("media_id")
                        .HasColumnType("int");

                    b.Property<int?>("season_count")
                        .HasColumnType("int");

                    b.HasKey("tvshow_id");

                    b.HasIndex("media_id");

                    b.ToTable("TVShows");
                });

            modelBuilder.Entity("Trackster.Model.Tokens", b =>
                {
                    b.Property<int>("token_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("token_id"));

                    b.Property<DateTime>("expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("token_id");

                    b.HasIndex("user_id");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("Trackster.Model.UserFavorites", b =>
                {
                    b.Property<int>("favorite_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("favorite_id"));

                    b.Property<DateTime>("added_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("media_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("favorite_id");

                    b.HasIndex("media_id");

                    b.HasIndex("user_id");

                    b.ToTable("UserFavorites");
                });

            modelBuilder.Entity("Trackster.Model.UserFollow", b =>
                {
                    b.Property<int>("follow_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("follow_id"));

                    b.Property<int>("followed_user_id")
                        .HasColumnType("int");

                    b.Property<int>("follower_id")
                        .HasColumnType("int");

                    b.HasKey("follow_id");

                    b.HasIndex("followed_user_id");

                    b.HasIndex("follower_id");

                    b.ToTable("UserFolllow");
                });

            modelBuilder.Entity("Trackster.Model.UserPreferences", b =>
                {
                    b.Property<int>("preference_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("preference_id"));

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("preference_id");

                    b.HasIndex("user_id");

                    b.ToTable("UserPreferences");
                });

            modelBuilder.Entity("Trackster.Model.UserRoles", b =>
                {
                    b.Property<int>("user_role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_role_id"));

                    b.Property<DateTime>("changed_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("user_role_id");

                    b.HasIndex("role_id");

                    b.HasIndex("user_id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Trackster.Model.UserSessions", b =>
                {
                    b.Property<int>("session_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("session_id"));

                    b.Property<string>("ip_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("login_time")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("logout_time")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("session_id");

                    b.HasIndex("user_id");

                    b.ToTable("UserSessions");
                });

            modelBuilder.Entity("Trackster.Model.Users", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<string>("bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password_hash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password_salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("profile_picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<bool?>("status")
                        .HasColumnType("bit");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Trackster.Model.WatchlistMovie", b =>
                {
                    b.Property<int>("watclist_movie_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("watclist_movie_id"));

                    b.Property<DateTime>("added_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("movie_id")
                        .HasColumnType("int");

                    b.Property<int?>("rating")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<string>("watch_state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("watclist_movie_id");

                    b.HasIndex("movie_id");

                    b.HasIndex("user_id");

                    b.ToTable("WatchlistMovie");
                });

            modelBuilder.Entity("Trackster.Model.WatchlistTVShow", b =>
                {
                    b.Property<int>("watchlist_tvshow_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("watchlist_tvshow_id"));

                    b.Property<DateTime>("added_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("rating")
                        .HasColumnType("int");

                    b.Property<int>("tvshow_id")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<string>("watch_state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("watchlist_tvshow_id");

                    b.HasIndex("tvshow_id");

                    b.HasIndex("user_id");

                    b.ToTable("WatchlistTVShow");
                });

            modelBuilder.Entity("Trackster.Model.GenreMedia", b =>
                {
                    b.HasOne("Trackster.Model.Genres", "genre")
                        .WithMany()
                        .HasForeignKey("genre_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trackster.Model.Media", "media")
                        .WithMany()
                        .HasForeignKey("media_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("genre");

                    b.Navigation("media");
                });

            modelBuilder.Entity("Trackster.Model.Genres", b =>
                {
                    b.HasOne("Trackster.Model.UserPreferences", null)
                        .WithMany("preferred_genres")
                        .HasForeignKey("UserPreferencespreference_id");
                });

            modelBuilder.Entity("Trackster.Model.Media", b =>
                {
                    b.HasOne("Trackster.Model.Languages", "language")
                        .WithMany()
                        .HasForeignKey("language_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trackster.Model.StreamingServices", "streaming_service")
                        .WithMany()
                        .HasForeignKey("streaming_service_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("language");

                    b.Navigation("streaming_service");
                });

            modelBuilder.Entity("Trackster.Model.MediaPersonCrewRole", b =>
                {
                    b.HasOne("Trackster.Model.Media", "media")
                        .WithMany()
                        .HasForeignKey("media_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trackster.Model.People", "person")
                        .WithMany()
                        .HasForeignKey("person_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trackster.Model.CrewRoles", "crew_role")
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("crew_role");

                    b.Navigation("media");

                    b.Navigation("person");
                });

            modelBuilder.Entity("Trackster.Model.MediaStatistics", b =>
                {
                    b.HasOne("Trackster.Model.Media", "media")
                        .WithMany()
                        .HasForeignKey("media_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trackster.Model.Users", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Trackster.Model.Movies", b =>
                {
                    b.HasOne("Trackster.Model.Media", "media")
                        .WithMany()
                        .HasForeignKey("media_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Trackster.Model.Notifications", b =>
                {
                    b.HasOne("Trackster.Model.Users", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Trackster.Model.Reviews", b =>
                {
                    b.HasOne("Trackster.Model.Media", "media")
                        .WithMany()
                        .HasForeignKey("media_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trackster.Model.Users", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Trackster.Model.TVShows", b =>
                {
                    b.HasOne("Trackster.Model.Media", "media")
                        .WithMany()
                        .HasForeignKey("media_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Trackster.Model.Tokens", b =>
                {
                    b.HasOne("Trackster.Model.Users", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Trackster.Model.UserFavorites", b =>
                {
                    b.HasOne("Trackster.Model.Media", "media")
                        .WithMany()
                        .HasForeignKey("media_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trackster.Model.Users", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Trackster.Model.UserFollow", b =>
                {
                    b.HasOne("Trackster.Model.Users", "followed_user")
                        .WithMany()
                        .HasForeignKey("followed_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trackster.Model.Users", "follower")
                        .WithMany()
                        .HasForeignKey("follower_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("followed_user");

                    b.Navigation("follower");
                });

            modelBuilder.Entity("Trackster.Model.UserPreferences", b =>
                {
                    b.HasOne("Trackster.Model.Users", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Trackster.Model.UserRoles", b =>
                {
                    b.HasOne("Trackster.Model.Roles", "role")
                        .WithMany("user_roles")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trackster.Model.Users", null)
                        .WithMany("user_roles")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trackster.Model.Users", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Trackster.Model.UserSessions", b =>
                {
                    b.HasOne("Trackster.Model.Users", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Trackster.Model.WatchlistMovie", b =>
                {
                    b.HasOne("Trackster.Model.Movies", "movie")
                        .WithMany()
                        .HasForeignKey("movie_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trackster.Model.Users", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("movie");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Trackster.Model.WatchlistTVShow", b =>
                {
                    b.HasOne("Trackster.Model.TVShows", "tvshow")
                        .WithMany()
                        .HasForeignKey("tvshow_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trackster.Model.Users", "user")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tvshow");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Trackster.Model.Roles", b =>
                {
                    b.Navigation("user_roles");
                });

            modelBuilder.Entity("Trackster.Model.UserPreferences", b =>
                {
                    b.Navigation("preferred_genres");
                });

            modelBuilder.Entity("Trackster.Model.Users", b =>
                {
                    b.Navigation("user_roles");
                });
#pragma warning restore 612, 618
        }
    }
}
